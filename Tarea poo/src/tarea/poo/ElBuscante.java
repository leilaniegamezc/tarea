/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tarea.poo;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 *
 * @author DELL
 */
public class ElBuscante extends javax.swing.JFrame {

    /**
     * Creates new form ElBuscante
     */
    public ElBuscante() {
        initComponents();
        Actualizar();
    }
    private void Actualizar(){
        Nombres.removeAllItems();
        
        // <editor-fold defaultstate="collapsed" desc="Obtener los nombres">
        String url = "jdbc:mysql://localhost:3306/tarea",
                usuario = "root",
                contrase単a = "";
        
        try (Connection conn = DriverManager.getConnection(url, usuario, contrase単a)){
            System.out.println("\n- - > Inicio de coleccion de nombres");
            
            // Un query es una consulta
            String query = "select Nombre from alumnos";


            try (PreparedStatement stmt = conn.prepareStatement(query)){
                ResultSet rs = stmt.executeQuery();

                while (rs.next()){
                    Nombres.addItem(rs.getString(1));
                }
            } catch (SQLException e){
                System.out.println("Error al ejectutar la consulta: \n" + e.getMessage());
                return;
            }
            
            System.out.println("- - > Fin de coleccion de nombres \n");
            
        } catch (SQLException e){
            System.out.println("Error al conectar a la base de datos: \n" + e.getMessage());
        }
        // </editor-fold>
    }
    private void Buscar(){
                // <editor-fold defaultstate="collapsed" desc="Buscar">
        String url = "jdbc:mysql://localhost:3306/tarea",
                usuario = "root",
                contrase単a = "";
        
        try (Connection conn = DriverManager.getConnection(url, usuario, contrase単a)){
            System.out.println("\n- - > Inicio de coleccion de propiedades");
            
            // Un query es una consulta
            String query = "";
            try {
                query = "select * from alumnos where Nombre = '" + Nombres.getSelectedItem().toString() + "'";
            } catch (Exception e) {
                return;
            }


            try (PreparedStatement stmt = conn.prepareStatement(query)){
                ResultSet rs = stmt.executeQuery();

                while (rs.next()){
                    String text = "";
                    
                    ArrayList<String> propiedades = new ArrayList<String>() {{
                        add("ID: ");
                        add("Nombre: ");
                        add("Apellido_Pat: ");
                        add("Apellido_Mat: ");
                        add("UserName: ");
                        add("Password: ");
                    }};
                    
                    for (int i = 0; i < propiedades.size(); i++){
                        text += propiedades.get(i) + rs.getString(i + 1) + "\n";
                    }
                    
                    Texto.selectAll();
                    Texto.replaceSelection(null);
                    Texto.insert(text, 0);
                }
            } catch (SQLException e){
                System.out.println("Error al ejectutar la consulta: \n" + e.getMessage());
                return;
            }
            
            System.out.println("- - > Fin de coleccion de propiedades \n");
            
        } catch (SQLException e){
            System.out.println("Error al conectar a la base de datos: \n" + e.getMessage());
        }
        // </editor-fold>
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Nombres = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Texto = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Nombres.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Nombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombresActionPerformed(evt);
            }
        });

        Texto.setColumns(20);
        Texto.setRows(5);
        jScrollPane1.setViewportView(Texto);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Nombres, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombresActionPerformed
        Buscar();
    }//GEN-LAST:event_NombresActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElBuscante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElBuscante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElBuscante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElBuscante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElBuscante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Nombres;
    private javax.swing.JTextArea Texto;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
